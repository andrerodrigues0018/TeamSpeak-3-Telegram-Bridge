name: Build and Deploy

on:
  push:
    branches:
      - 'test*'
    tags:
      - 'v*'

env:
  PLUGIN_NAME: "TelegramBridge"
  INTERNAL_VERSION: 0.0.1

jobs:
  prebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Variables
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v ]]; then
            version="${GITHUB_REF#refs/tags/v}"
          else
            version="$INTERNAL_VERSION"
          fi
          sed -i "s/<version>/$version/g" deploy/package.ini
          sed -i "s/<version>/$version/g" src/definitions.h
          sed -i "s/<plugin_name>/${{ env.PLUGIN_NAME }}/g" deploy/package.ini
          sed -i "s/<plugin_name>/${{ env.PLUGIN_NAME }}/g" CMakeLists.txt
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuild
          path: |
            deploy/package.ini
            src/definitions.h
            CMakeLists.txt

  build:
    runs-on: windows-2022
    needs: prebuild
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download prebuild
        uses: actions/download-artifact@v4
        with:
          name: prebuild
          path: .
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: 14.0
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          target: 'desktop'
          arch: win64_msvc2019_64
          dir: '${{ github.workspace }}'
          cache: true
          cache-key-prefix: windows-x64-Qt
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
      - name: Build
        run: |
          cmake -A x64 .
          cmake --build . --config Release
      - name: Rename DLL
        run: |
          mv Release/${{ env.PLUGIN_NAME }}.dll ${{ env.PLUGIN_NAME }}_win64.dll
      - name: Archive DLL
        uses: actions/upload-artifact@v4
        with:
          name: win64
          path: ${{ env.PLUGIN_NAME }}_win64.dll

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download prebuild
        uses: actions/download-artifact@v4
        with:
          name: prebuild
          path: .
      - name: Remove old artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: prebuild
      - name: Create Tmp Folder
        run: mkdir -p tmp
      - name: Collect artifacts
        uses: actions/download-artifact@v4
        with:
          path: tmp
      - name: Move to deploy
        run: mv tmp/**/* deploy/plugins/
      - name: Install zip
        uses: montudor/action-zip@v1
      - name: Zip output
        run: zip -qq -r ../${{ env.PLUGIN_NAME }}.zip .
        working-directory: deploy
      - name: Rename release
        run: mv ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}.${{ github.ref_name }}.ts3_plugin
      - name: Set draft flag
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v ]]; then
            echo "draft=false" >> $GITHUB_ENV
          else
            echo "draft=true" >> $GITHUB_ENV
          fi
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./${{ env.PLUGIN_NAME }}.${{ github.ref_name }}.ts3_plugin
          draft: ${{ env.draft }}
          prerelease: false
